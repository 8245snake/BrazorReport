@inject HighLightingService _HighLightingService
@inject ReportComponentService _Service

<div>
    <div>子要素が表示されます</div>
    <select class="custom-select" @onchange="OnChange">
        @if (ExtendedModel?.Children(false) != null)
        {
            <option value="none"></option>

            @foreach (var child in ExtendedModel?.Children(false))
            {
                <option value="@child.ID">@child?.Name</option>
            }
        }


    </select>
</div>

@code {

    [Parameter]
    public DraggableComponentModel Model { get; set; }

    public ContainerComponentModel ExtendedModel;



    protected override void OnInitialized()
    {
        _HighLightingService.HighLightChanged += HighLightChanged;
        _Service.ModelPropertyChanged += OnModelPropertyChanged;
        ExtendedModel = Model as ContainerComponentModel;

    }

    private void OnModelPropertyChanged(string id, DraggableComponentModel model)
    {
        Model = model;
        ExtendedModel = Model as ContainerComponentModel;
        StateHasChanged();
    }

    private void HighLightChanged(object sender, EventArgs e)
    {
        var model = _Service.Find(_HighLightingService.HighLightingID);
        if (model == null)
        {
            return;
        }
        Model = model;
        ExtendedModel = Model as ContainerComponentModel;
        StateHasChanged();
    }


    private void OnChange(ChangeEventArgs e)
    {
        _HighLightingService.HighLightingID = (string)e.Value;
    }
}
